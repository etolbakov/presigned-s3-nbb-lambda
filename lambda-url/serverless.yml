service: s3-presigned-upload-lambda-url

provider:
  name: aws
  runtime: nodejs14.x
  architecture: arm64
  memorySize: 128
  region: ${file(serverless-common.yml):region}
  stage: ${file(serverless-common.yml):stage}
  buckets: ${file(serverless-common.yml):buckets}
  accounts: ${file(serverless-common.yml):accounts}
  lambdaHashingVersion: '20201221'


functions:
  presigned-upload-lambda-url:
    handler: index.handler
    role: PresignedUploadLambdaUrlRole
    reservedConcurrency: 2
    url: true

resources:
 
  Resources:

    PresignedUploadLambdaUrlRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: s3-presigned-upload-lambda-url-role
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        Policies:
          - PolicyName: s3-presigned-upload-lambda-url-policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: "Allow"
                  Action:
                    - "s3:GetObject"
                    - "s3:GetObjectVersion"
                    - "s3:PutObject"
                    - "s3:PutObjectAcl"
                  Resource: ${self:provider.buckets}
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: ${self:provider.accounts}
              Action: sts:AssumeRole
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole